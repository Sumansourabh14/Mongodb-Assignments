Query the movies collection to 

1. get all documents

Ans. 

db.movies.find().pretty()

Output:

{
        "_id" : ObjectId("5ffd26f98b620654ff5f0950"),
        "title" : "Fight Club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("5ffd2b958b620654ff5f0951"),
        "title" : "Pulp Fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "Uma Thurman"
        ]
}
{
        "_id" : ObjectId("5ffd2c0f8b620654ff5f0952"),
        "title" : "Inglorious Basterds",
        "writer" : "Quentin Tarantino",
        "year" : 2009,
        "actors" : [
                "Brad Pitt",
                "Diane Kruger",
                "Eli Roth"
        ]
}
{
        "_id" : ObjectId("5ffd33e68b620654ff5f0953"),
        "title" : "The Hobbit: An Unexpected Journey",
        "writer" : "J.R.R. Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("5ffd34a58b620654ff5f0954"),
        "title" : "The Hobbit: The Battle of the Five Armies",
        "writer" : "J.R.R. Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness."
}
{
        "_id" : ObjectId("5ffd35488b620654ff5f0955"),
        "title" : "Pee Wee Herman's Big Adventure"
}
{ "_id" : ObjectId("5ffd35488b620654ff5f0956"), "title" : "Avatar" }



2. get all documents with writer set to "Quentin Tarantino" 

Ans.

db.movies.find({writer:"Quentin Tarantino"}).pretty()
{
        "_id" : ObjectId("5ffd2b958b620654ff5f0951"),
        "title" : "Pulp Fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "Uma Thurman"
        ]
}
{
        "_id" : ObjectId("5ffd2c0f8b620654ff5f0952"),
        "title" : "Inglorious Basterds",
        "writer" : "Quentin Tarantino",
        "year" : 2009,
        "actors" : [
                "Brad Pitt",
                "Diane Kruger",
                "Eli Roth"
        ]
}


3. get all documents where actors include "Brad Pitt" 

db.movies.find({actors:"Brad Pitt"}).pretty()
{
        "_id" : ObjectId("5ffd26f98b620654ff5f0950"),
        "title" : "Fight Club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("5ffd2c0f8b620654ff5f0952"),
        "title" : "Inglorious Basterds",
        "writer" : "Quentin Tarantino",
        "year" : 2009,
        "actors" : [
                "Brad Pitt",
                "Diane Kruger",
                "Eli Roth"
        ]
}


4. get all documents with franchise set to "The Hobbit"

Ans.

db.movies.find({franchise:"The Hobbit"}).pretty()
{
        "_id" : ObjectId("5ffd33e68b620654ff5f0953"),
        "title" : "The Hobbit: An Unexpected Journey",
        "writer" : "J.R.R. Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("5ffd34a58b620654ff5f0954"),
        "title" : "The Hobbit: The Battle of the Five Armies",
        "writer" : "J.R.R. Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness."
}

5. get all movies released in the 90s 

Ans.

db.movies.find({year: {$lt: 2000}}).pretty()
{
        "_id" : ObjectId("5ffd26f98b620654ff5f0950"),
        "title" : "Fight Club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("5ffd2b958b620654ff5f0951"),
        "title" : "Pulp Fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "Uma Thurman"
        ]
}

6. get all movies released before the year 2000 or after 2010

Ans.

db.movies.find({$and: [{year:{$gt:1989}},{year: {$lt:2000}}]}).pretty()
{
        "_id" : ObjectId("5ffd26f98b620654ff5f0950"),
        "title" : "Fight Club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("5ffd2b958b620654ff5f0951"),
        "title" : "Pulp Fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "Uma Thurman"
        ]
} 

UPDATE

1. db.movies.update({title: "The Hobbit: An Unexpected Journey"}, {synopsis: "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."})


2. db.movies.update({title: "The Hobbit: The Desolation of Smaug"}, {synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."})


3. db.movies.update({title: "Pulp Fiction"}, {$push: {actors: "Samuel L. Jackson"}})


TEXT SEARCH

1. db.movies.find({$text: {$search: "Bilbo"}})
2. db.movies.find({$text: {$search: "Gandalf"}})
3. db.movies.find({$text: {$search: "Bilbo -Gandalf"}})
4. db.movies.find({$text: {$search: "dwarves hobbit"}})
5. db.movies.find({$text: {$search: "gold dragon"}})

DELETE DOCUMENT

1. db.movies.deleteMany({title: "Pee Wee Herman's Big Adventure"})
2. db.movies.deleteMany({title: "Avatar"})

LAST PART

1. db.users.find()
2. db.posts.find()
3. db.posts.find({username: "GoodGuyGreg"})
4. db.posts.find({username: "ScumbagSteve"})
5. db.comments.find()
6. db.comments.find({username: "GoodGuyGreg"})
7. db.comments.find({username: "ScumbagSteve"})